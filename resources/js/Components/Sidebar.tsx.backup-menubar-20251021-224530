import { Link, usePage } from "@inertiajs/react";
import { Building2, FileText, Home, LayoutDashboard, LogOut, Plus, Settings, Ticket, User, Users } from "lucide-react";
import { cn } from "@/lib/utils";
import ApplicationLogo from "./ApplicationLogo";
import { Button } from "./ui/button";

interface SidebarProps {
  className?: string;
}

export default function Sidebar({ className }: SidebarProps) {
  const { auth } = usePage().props as any;
  const isSuperAdmin = auth?.user?.is_super_admin === true;
  return (
    <div className={cn("h-screen w-64 flex-shrink-0 bg-gradient-to-b from-[#000050] to-[#0C0C6C] border-r border-white/5 flex flex-col shadow-xl", className)}>
      {/* Logo */}
      <div className="p-6 pb-8 flex items-center justify-center">
        <Link href="/">
          <ApplicationLogo className="h-10 w-auto fill-current text-white" />
        </Link>
      </div>

      {/* Botão Novo Ticket */}
      <div className="px-4 pb-6">
        <Link href={route("tickets.create")}>
          <Button 
            className="w-full bg-[#4855e2] text-white hover:bg-[#5D6AFF] font-semibold shadow-sm hover:shadow-lg transition-all duration-300 rounded-xl h-12"
          >
            <Plus className="mr-2 h-5 w-5" />
            Novo Ticket
          </Button>
        </Link>
      </div>

      {/* Navigation Links */}
      <nav className="flex-1 overflow-y-auto px-3">
        <ul className="space-y-1">
          <li>
            <SidebarLink
              href={route("dashboard")}
              active={route().current("dashboard")}
              icon={<LayoutDashboard size={18} />}
              label="Dashboard"
            />
          </li>
          <li>
            <SidebarLink
              href={route("tickets.index")}
              active={route().current("tickets.*")}
              icon={<Ticket size={18} />}
              label="Tickets"
            />
          </li>
          <li>
            <SidebarLink
              href={route("clients.index")}
              active={route().current("clients.*")}
              icon={<Users size={18} />}
              label="Clientes"
            />
          </li>
          <li>
            <SidebarLink
              href={route("contracts.index")}
              active={route().current("contracts.*")}
              icon={<FileText size={18} />}
              label="Contratos"
            />
          </li>
          <li>
            <SidebarLink
              href={route("settings.index")}
              active={route().current("settings.*")}
              icon={<Settings size={18} />}
              label="Configurações"
            />
          </li>
          
          {/* Super Admin Menu */}
          {isSuperAdmin && (
            <>
              <li className="pt-6 pb-2">
                <div className="px-4 text-xs font-semibold text-white/50 uppercase tracking-wider">
                  Super Admin
                </div>
              </li>
              <li>
                <SidebarLink
                  href={route("superadmin.tenants.index")}
                  active={route().current("superadmin.*")}
                  icon={<Building2 size={18} />}
                  label="Plataforma"
                />
              </li>
            </>
          )}
        </ul>
      </nav>

      {/* Footer */}
      <div className="p-4 mt-auto">
        <div className="text-xs text-white/40 text-center font-medium">
          Sincro8 Tickets v1.0
        </div>
      </div>
    </div>
  );
}

interface SidebarLinkProps {
  href: string;
  active: boolean;
  icon: React.ReactNode;
  label: string;
}

function SidebarLink({ href, active, icon, label }: SidebarLinkProps) {
  return (
    <Link
      href={href}
      className={cn(
        "flex items-center gap-3 px-4 py-2.5 text-sm font-medium rounded-xl transition-all duration-300 group",
        active
          ? "bg-[#4855e2] text-white shadow-md shadow-[#4855e2]/20"
          : "text-white/70 hover:text-white hover:bg-white/10 hover:translate-x-1"
      )}
    >
      <span className={cn(
        "transition-transform duration-300",
        !active && "group-hover:scale-110"
      )}>
        {icon}
      </span>
      <span>{label}</span>
    </Link>
  );
}
