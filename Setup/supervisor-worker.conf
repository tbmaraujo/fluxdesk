################################################################################
# FLUXDESK - Configuração Supervisor (Queue Workers)
# Arquivo: /etc/supervisor/conf.d/fluxdesk-worker.conf
# Descrição: Gerenciamento de processos Laravel Queue Workers
################################################################################

[program:fluxdesk-worker]
# Nome do processo com numeração
process_name=%(program_name)s_%(process_num)02d

# Comando para executar o worker
command=php /var/www/fluxdesk/current/artisan queue:work --sleep=3 --tries=3 --max-time=3600 --timeout=60

# Iniciar automaticamente quando supervisor inicia
autostart=true

# Reiniciar automaticamente se o processo morrer
autorestart=true

# Parar todo o grupo de processos ao invés de apenas um
stopasgroup=true

# Matar todo o grupo de processos
killasgroup=true

# Usuário que executará o processo (mesmo do Nginx/PHP-FPM)
user=www-data

# Número de processos (2 workers para balanceamento)
numprocs=2

# Redirecionar stderr para stdout
redirect_stderr=true

# Arquivo de log
stdout_logfile=/var/www/fluxdesk/shared/storage/logs/worker.log

# Tamanho máximo do log (10MB)
stdout_logfile_maxbytes=10MB

# Número de backups de log
stdout_logfile_backups=5

# Tempo de espera antes de matar o processo (1 hora)
stopwaitsecs=3600

# Prioridade de inicialização (999 = alta)
priority=999

################################################################################
# CONFIGURAÇÃO OPCIONAL: SCHEDULER (Laravel Cron)
################################################################################

# Descomente se quiser usar Supervisor para o scheduler ao invés de cron

# [program:fluxdesk-scheduler]
# process_name=%(program_name)s
# command=php /var/www/fluxdesk/current/artisan schedule:work
# autostart=true
# autorestart=true
# user=www-data
# redirect_stderr=true
# stdout_logfile=/var/www/fluxdesk/shared/storage/logs/scheduler.log
# stopwaitsecs=3600

################################################################################
# COMANDOS ÚTEIS:
#
# Atualizar configuração:
# sudo supervisorctl reread
# sudo supervisorctl update
#
# Controlar workers:
# sudo supervisorctl status fluxdesk-worker:*
# sudo supervisorctl start fluxdesk-worker:*
# sudo supervisorctl stop fluxdesk-worker:*
# sudo supervisorctl restart fluxdesk-worker:*
#
# Ver logs em tempo real:
# sudo tail -f /var/www/fluxdesk/shared/storage/logs/worker.log
#
# Após deploy (reiniciar workers):
# sudo supervisorctl restart fluxdesk-worker:*
#
################################################################################
# NOTAS:
#
# 1. Queue Connection:
#    - Configure QUEUE_CONNECTION no .env (database, redis, etc)
#    - Para produção, recomenda-se 'database' ou 'redis'
#
# 2. Número de Workers:
#    - numprocs=2: 2 workers paralelos
#    - Ajuste conforme carga (1-4 workers geralmente suficiente)
#
# 3. Parâmetros do Worker:
#    - --sleep=3: Espera 3s entre verificações de fila vazia
#    - --tries=3: Tenta processar job até 3 vezes
#    - --max-time=3600: Reinicia worker após 1 hora (evita memory leak)
#    - --timeout=60: Timeout de 60s por job
#
# 4. Reiniciar Após Deploy:
#    - SEMPRE reinicie workers após deploy
#    - Workers carregam código em memória
#    - Sem restart, rodam código antigo
#
# 5. Monitoramento:
#    - Verifique logs regularmente
#    - Configure alertas para workers parados
#    - Use 'supervisorctl status' para health check
#
################################################################################
