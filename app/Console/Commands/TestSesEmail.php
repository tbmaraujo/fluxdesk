<?php

namespace App\Console\Commands;

use App\Mail\TestEmail;
use Illuminate\Console\Command;
use Illuminate\Support\Facades\Mail;

class TestSesEmail extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'mail:test-ses {email : O endere√ßo de e-mail para enviar o teste}';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Envia um e-mail de teste para verificar a configura√ß√£o do Amazon SES';

    /**
     * Execute the console command.
     */
    public function handle(): int
    {
        $email = $this->argument('email');

        // Validar formato do e-mail
        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $this->error('‚ùå Endere√ßo de e-mail inv√°lido!');
            return self::FAILURE;
        }

        $this->info('üìß Enviando e-mail de teste para: ' . $email);
        $this->newLine();

        // Verificar configura√ß√µes
        $this->line('üîç Verificando configura√ß√µes...');
        $this->table(
            ['Configura√ß√£o', 'Valor'],
            [
                ['MAIL_MAILER', config('mail.default')],
                ['MAIL_FROM_ADDRESS', config('mail.from.address')],
                ['MAIL_FROM_NAME', config('mail.from.name')],
                ['AWS_DEFAULT_REGION', config('services.ses.region', env('AWS_DEFAULT_REGION'))],
                ['AWS_ACCESS_KEY_ID', env('AWS_ACCESS_KEY_ID') ? '‚úì Configurado' : '‚úó N√£o configurado'],
                ['AWS_SECRET_ACCESS_KEY', env('AWS_SECRET_ACCESS_KEY') ? '‚úì Configurado' : '‚úó N√£o configurado'],
            ]
        );

        // Verificar se as credenciais AWS est√£o configuradas
        if (!env('AWS_ACCESS_KEY_ID') || !env('AWS_SECRET_ACCESS_KEY')) {
            $this->error('‚ùå Credenciais AWS n√£o configuradas!');
            $this->warn('Configure AWS_ACCESS_KEY_ID e AWS_SECRET_ACCESS_KEY no arquivo .env');
            return self::FAILURE;
        }

        // Verificar se o mailer est√° configurado para SES
        if (config('mail.default') !== 'ses') {
            $this->warn('‚ö†Ô∏è  MAIL_MAILER n√£o est√° configurado como "ses"');
            $this->warn('Mailer atual: ' . config('mail.default'));
            
            if (!$this->confirm('Deseja continuar mesmo assim?', false)) {
                return self::FAILURE;
            }
        }

        $this->newLine();
        $this->info('üì§ Enviando e-mail...');

        try {
            Mail::to($email)->send(new TestEmail());

            $this->newLine();
            $this->info('‚úÖ E-mail de teste enviado com sucesso!');
            $this->newLine();
            $this->line('üì¨ Verifique a caixa de entrada de: ' . $email);
            $this->line('üóëÔ∏è  N√£o esque√ßa de verificar a pasta de spam!');
            $this->newLine();
            
            if (app()->environment('production')) {
                $this->warn('‚ö†Ô∏è  ATEN√á√ÉO: Voc√™ est√° em ambiente de PRODU√á√ÉO!');
            }

            $this->info('üí° Dica: No AWS SES Sandbox, voc√™ s√≥ pode enviar e-mails para endere√ßos verificados.');
            $this->info('   Para enviar para qualquer destinat√°rio, solicite a sa√≠da do Sandbox no AWS Console.');

            return self::SUCCESS;
        } catch (\Exception $e) {
            $this->newLine();
            $this->error('‚ùå Erro ao enviar e-mail!');
            $this->error('Mensagem: ' . $e->getMessage());
            $this->newLine();

            // Dicas de troubleshooting
            $this->warn('üîß Poss√≠veis solu√ß√µes:');
            $this->line('  1. Verifique se o e-mail remetente est√° verificado no Amazon SES');
            $this->line('  2. Verifique se as credenciais AWS est√£o corretas');
            $this->line('  3. Verifique se a regi√£o (AWS_DEFAULT_REGION) est√° correta');
            $this->line('  4. Se estiver no Sandbox, verifique se o destinat√°rio est√° verificado');
            $this->line('  5. Verifique as permiss√µes IAM do usu√°rio AWS');

            return self::FAILURE;
        }
    }
}
